{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monsters","id","alt","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAEaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,SAASC,GAAzC,0BAAqEC,IAAI,YACjF,6BAAKL,EAAMG,SAASG,OACpB,4BAAIN,EAAMG,SAASI,YCFdC,EAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMG,SAASM,KAAI,SAACN,GAAD,OACpB,cAAC,EAAD,CAA0BA,SAAYA,GAAzBA,EAASC,UCHhBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACtB,uBACAX,UAAY,SACZY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCsCCG,E,kDAvCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXlB,SAAU,GACVe,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEd,SAAUuB,S,oBAM/C,WACE,MAAkCC,KAAKN,MAA/BlB,EAAR,EAAQA,SAAUe,EAAlB,EAAkBA,YAIZU,EAAkBzB,EAAS0B,QAAO,SAAC1B,GAAD,OACtCA,EAASG,KAAKwB,cAAcC,SAASb,EAAYY,kBAEnD,OACE,sBAAK7B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEU,YAAY,iBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUT,SAAUyB,W,GAlCVI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9741b33e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card = (props)=>(\r\n    <div className = 'card-container'>\r\n        <img src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`} alt=\"monster\" />\r\n        <h2>{props.monsters.name}</h2>\r\n        <p>{props.monsters.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.style.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = props => {\r\n    return <div className='card-list'>\r\n        {props.monsters.map((monsters) => (\r\n        <Card key = {monsters.id} monsters = {monsters}/>\r\n      ))}</div>\r\n}"," import React from 'react';\r\n\r\n import './search-box.style.css';\r\n\r\n export const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n    className = 'search'\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n );","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n//making classes instead of function\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchfield: \"\",\n    }; \n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = e => {\n    this.setState({ searchfield: e.target.value });\n  }\n  render() {\n    const { monsters, searchfield } = this.state; //used to pull the value from monster to searchfield and filter\n    //can also be written as\n    // const monsters = this.state.monsters;\n    // const searchfield = this.state.searchfield;\n    const filteredMonster = monsters.filter((monsters) =>\n      monsters.name.toLowerCase().includes(searchfield.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monster\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}